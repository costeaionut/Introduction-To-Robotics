const int pinA = 12;
const int pinB = 8;
const int pinC = 5;
const int pinD = 3;
const int pinE = 2;
const int pinF = 11;
const int pinG = 6;
const int pinDP = 4;
const int pinD1 = 7;
const int pinD2 = 9;
const int pinD3 = 10;
const int pinD4 = 13;
const int pinSW = A2;
const int pinX = A0;
const int pinY = A1;

int current_digit = 0;

int switchValue = 0;
int xValue = 0;
int yValue = 0;

bool xIsMoved;
bool yIsMoved;
bool locked;
const int xMinThreshold = 400;
const int xMaxThreshold = 600;
const int yMinThreshold = 400;
const int yMaxThreshold = 600;

bool dpState = LOW;
const int segSize = 8;

const int noOfDisplays = 4;
const int noOfDigits = 10;

int segments[segSize] = {
  pinA, pinB, pinC, pinD, pinE, pinF, pinG, pinDP
};

int number[noOfDisplays] = {
  0, 0, 0, 0
};

int digits[noOfDisplays] = {
  pinD1, pinD2, pinD3, pinD4
 };   
 
byte digitMatrix[noOfDigits][segSize - 1] = {
// a  b  c  d  e  f  g
  {1, 1, 1, 1, 1, 1, 0}, // 0
  {0, 1, 1, 0, 0, 0, 0}, // 1
  {1, 1, 0, 1, 1, 0, 1}, // 2
  {1, 1, 1, 1, 0, 0, 1}, // 3
  {0, 1, 1, 0, 0, 1, 1}, // 4
  {1, 0, 1, 1, 0, 1, 1}, // 5
  {1, 0, 1, 1, 1, 1, 1}, // 6
  {1, 1, 1, 0, 0, 0, 0}, // 7
  {1, 1, 1, 1, 1, 1, 1}, // 8
  {1, 1, 1, 1, 0, 1, 1}  // 9
};

void displayNumber(byte digit) {
   for (int i = 0; i < segSize - 1 ; i++) {
  digitalWrite(segments[i], digitMatrix[digit][i]);
  }
  digitalWrite(segments[8], dpState);
}

void showDigit(int num) {
  for (int i = 0; i < noOfDisplays; i++) {
  digitalWrite(digits[i], HIGH);
  }
  digitalWrite(digits[num], LOW);
}

void showVector(){
  for(int i = 0; i < noOfDisplays; i++){
    showDigit(i);
    displayNumber(number[i]);
    if(i == current_digit){
      digitalWrite(segments[7], HIGH);
    }
    else digitalWrite(segments[7], LOW);
    delay(5);
  }
}

void setup() {
  for (int i = 0; i < segSize ; i++)
  {
  pinMode(segments[i], OUTPUT);  
  }
  for (int i = 0; i < noOfDisplays; i++)
  {
  pinMode(digits[i], OUTPUT);  
  }
  pinMode(pinSW, INPUT);
  Serial.begin(9600);
}

void loop(){
  showVector();
  switchValue = analogRead(pinSW);
  xValue = analogRead(pinX);
  yValue = analogRead(pinY);
  if(switchValue == 0){
    switchValue = 1;
  }
  else{
    switchValue = 0;
  }
  if(xValue >= xMaxThreshold && xIsMoved == 0){
    if(number[current_digit] == 9) number[current_digit] = 0; 
    else number[current_digit]++;
    xIsMoved = 1;
    locked = 1;
  }
  if(xValue <= xMinThreshold && xIsMoved == 0){
    if(number[current_digit] == 0) number[current_digit] = 9; 
    else number[current_digit]--;
    xIsMoved = 1;
    locked = 1;
  }
  if(yValue <= yMinThreshold && yIsMoved == 0 && locked == 0){
    if(current_digit == 3) current_digit = 0;
    else current_digit++;
    yIsMoved = 1;
  }
  if(yValue >= yMaxThreshold && yIsMoved == 0 && locked == 0){
    if(current_digit == 0) current_digit = 3;
    else current_digit--;
    yIsMoved = 1;
  }
  if(xValue >= xMinThreshold && xValue <= xMaxThreshold) xIsMoved = 0;
  if(yValue >= yMinThreshold && yValue <= yMaxThreshold) yIsMoved = 0;
  if(switchValue == 1) locked = 0;
}
